# Default values for movie-analyzer
# This values.yaml file contains simplified parameterized configurations

global:
  namespace: movie-analyzer

# Backend configuration
backend:
  name: backend
  replicaCount: 1
  
  image:
    repository: artisantek/movie-analyzer
    tag: backend
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  
  env:
    DB_HOST: "database"
    DB_PORT: "5432"
    DB_NAME: "moviereviews"
    MODEL_SERVER_URL: "http://model:5000"
    SERVER_PORT: "8080"
  
  probes:
    readiness:
      path: /actuator/health
      port: 8080
      initialDelaySeconds: 10
      periodSeconds: 10
    liveness:
      path: /actuator/health
      port: 8080
      initialDelaySeconds: 15
      periodSeconds: 10
  
  secret:
    # Base64 encoded values: movieuser:moviepass
    DB_USERNAME: bW92aWV1c2Vy
    DB_PASSWORD: bW92aWVwYXNz

# Frontend configuration
frontend:
  name: frontend
  replicaCount: 1
  
  image:
    repository: artisantek/movie-analyzer
    tag: frontend
    pullPolicy: IfNotPresent
  
  service:
    type: NodePort
    port: 3000
    targetPort: 3000
    nodePort: 30000
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  env:
    BACKEND_API_URL: "http://backend:8080"
  
  probes:
    readiness:
      path: /health
      port: 3000
      initialDelaySeconds: 5
      periodSeconds: 5
    liveness:
      path: /health
      port: 3000
      initialDelaySeconds: 10
      periodSeconds: 10

# Model server configuration
model:
  name: model
  replicaCount: 1
  
  image:
    repository: artisantek/movie-analyzer
    tag: model
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 5000
    targetPort: 5000
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  env:
    MODEL_PORT: "5000"
  
  probes:
    readiness:
      path: /health
      port: 5000
      initialDelaySeconds: 5
      periodSeconds: 5
    liveness:
      path: /health
      port: 5000
      initialDelaySeconds: 10
      periodSeconds: 10

# PostgreSQL database configuration
postgres:
  name: database
  replicaCount: 1
  
  image:
    repository: postgres
    tag: 15-alpine
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 5432
    targetPort: 5432
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  secret:
    # Base64 encoded values: postgres:postgres:moviereviews
    POSTGRES_USER: cG9zdGdyZXM=
    POSTGRES_PASSWORD: cG9zdGdyZXM=
    POSTGRES_DB: bW92aWVyZXZpZXdz
  
  persistence:
    enabled: true
    storageClass: manual
    size: 1Gi
    hostPath: /mnt/data/postgres

# Ingress configuration (optional)
ingress:
  enabled: false
  host: movie.artisantek.in
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: / 
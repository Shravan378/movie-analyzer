---
# PostgreSQL Database Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.postgres.name }}
spec:
  replicas: {{ .Values.postgres.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.postgres.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.name }}
    spec:
      containers:
      - name: {{ .Values.postgres.name }}
        image: {{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}
        imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.postgres.service.targetPort }}
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ .Values.postgres.name }}-secret
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.postgres.name }}-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.postgres.name }}-secret
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: init-sql
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: {{ .Values.postgres.resources.requests.memory }}
            cpu: {{ .Values.postgres.resources.requests.cpu }}
          limits:
            memory: {{ .Values.postgres.resources.limits.memory }}
            cpu: {{ .Values.postgres.resources.limits.cpu }}
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: {{ .Values.postgres.name }}-pvc
      - name: init-sql
        configMap:
          name: {{ .Values.postgres.name }}-init 